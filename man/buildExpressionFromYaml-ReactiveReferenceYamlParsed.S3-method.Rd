% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{buildExpressionFromYaml,ReactiveReferenceYamlParsed.S3-method}
\alias{buildExpressionFromYaml,ReactiveReferenceYamlParsed.S3-method}
\alias{buildExpressionFromYaml-ReactiveReferenceYamlParsed.S3-method}
\title{Build Expression Based on YAML Markup (ReactiveReferenceYamlParsed.S3)}
\usage{
\S4method{buildExpressionFromYaml}{ReactiveReferenceYamlParsed.S3}(yaml, ...)
}
\arguments{
\item{yaml}{\code{\link{ReactiveReferenceYamlParsed.S3}}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
\code{\link{ReactiveReferenceYamlProcessed.S3}}.
   Processed YAML markup.
}
\description{
See generic: \code{\link[yamlyaml]{buildExpressionFromYaml}}
}
\examples{
\dontrun{

## Get //  
yaml <- getYaml(
  from = function() {
  "reactive-ref: {id: x_1, where: .GlobalEnv, as: ref_1}"
  },
  ctx = YamlContext.ReactiveReference.S3()
)

## Parse //
yaml <- parseYaml(yaml = yaml)

## Build //
yaml <- buildExpressionFromYaml(yaml = yaml)

## Two ways of accessing expressions //
## 1) Via 'parsed':
ls(yaml$parsed$x_1$expr)
yaml$parsed$x_1$expr$exists
yaml$parsed$x_1$expr$validate
yaml$parsed$x_1$expr$get_assign

## 2) Via 'expr':
ls(yaml$expr$x_1)
yaml$expr$x_1$exists
yaml$expr$x_1$validate
yaml$expr$x_1$get_assign

## NOTE
## The environment in `expr${id}` corresponds to the environment 
## in `parsed${id}$expr. So expressions are not actually stored redundantly
## as environments implement a "pass-by-referenc" instead of the otherwise
## typical "pass-by-value" paradigm. 
## Environment `expr` simply exists as a shorthand for accessing expressions

## Example of expression execution //
## Validity checks:
suppressWarnings(rm(x_1))
eval(yaml$parsed$x_1$expr$exists)
eval(yaml$parsed$x_1$expr$validate)
x_1 <- 10
eval(yaml$parsed$x_1$expr$exists)
eval(yaml$parsed$x_1$expr$validate)

## The line that contained the YAML markup in 'from' above will be substituted
## by this expression 
eval(yaml$parsed$x_1$expr$get_assign)
ref_1

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/yamlr}
}
\seealso{
\code{
   \link[yamlyaml]{buildExpressionFromYaml}
}
}

