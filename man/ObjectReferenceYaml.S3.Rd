% Generated by roxygen2 (4.0.2): do not edit by hand
\name{ObjectReferenceYaml.S3}
\alias{ObjectReferenceYaml.S3}
\title{Class: ObjectReferenceYaml.S3}
\usage{
ObjectReferenceYaml.S3(.x, original = character(), index = numeric(),
  src = NULL)
}
\arguments{
\item{.x}{\code{\link{ANY}}. An object of an arbitrary class whose class
   attribute should be updated so that it becomes an instance of class
   \code{ObjectReferenceYaml.S3}. Mainly intended for rapid prototyping
   purposes}
}
\value{
Instance of class \code{ObjectReferenceYaml.S3}.
}
\description{
Class representing YAML markup in the context of reactive references and
its constructor function. The class for the reactive reference context is
\code{\link[yamlr]{YamlContext.ObjectReference.S3}}
}
\section{Fields}{

\describe{
\item{\code{original}}{\code{\link{character}}.
YAML markup as identified by
\code{\link[yamlr]{getYaml}}
Initial: \code{character()}.}

\item{\code{index}}{\code{\link{numeric}}.
Index denoting the lines/expressions that where YAML was identified.
These lines/expressions will later be substituted by suitable expressions.
Initial: \code{numeric()}.}

\item{\code{src}}{\code{\link{ANY}}.
Object in which YAML markup was identified. Typcially, this corresponds
to a function or expression, but it can generally be any R object that
can contain YAML markup and for which methods for
\code{\link[yamlr]{getYaml}} are defined.
Initial: \code{NULL}.}
}}
\section{Intended use of this class}{


This S3 class, or to be more precise its constructor function, exists mainly
for rapid prototyping purposes.
This is mainly reflected in the fact, that when specifying \code{.x}, this
constructor function will simply update the \code{class} attribute of
whatever object has been provided.

However, it also allows for a more formal OOP-style of rapid
prototyping by offering explicit \emph{class fields} (all arguments except
\code{.x}). Nevertheless, it is probably advisable to switch to an
explicit formal approach such as \emph{S4} and/or \emph{Reference Classes}
once the package or application has reached a certain state of maturity.
}
\examples{
\dontrun{

## Informal use (intended mainly for rapid prototyping) //
## Takes *any* object and simply changes the class attributes
ObjectReferenceYaml.S3(
  list(
    original = "object-ref: {id: x_1, where:.GlobalEnv, as: ref_1}",
    index = 1,
    src = function() {
      "object-ref: {id: x_1, where:.GlobalEnv, as: ref_1}"
      ref_1
    }
  )
)  
ObjectReferenceYaml.S3(TRUE)  

## Formal use (explicitly using 'fields') //
res <- ObjectReferenceYaml.S3()
ls(res)
res <- ObjectReferenceYaml.S3(
  original = "object-ref: {id: x_1, where:.GlobalEnv, as: ref_1}",
  index = 1,
  src = function() {
    "object-ref: {id: x_1, where:.GlobalEnv, as: ref_1}"
    ref_1
  }
)
res$original
res$index
res$src

## Recommended: include namespace //
## Regardless if you plan on using this class in an informal or formal way
yamlr::ObjectReferenceYaml.S3(
  original = "object-ref: {id: x_1, where:.GlobalEnv, as: ref_1}",
  index = 1,
  src = function() {
    "object-ref: {id: x_1, where:.GlobalEnv, as: ref_1}"
    ref_1
  }
)

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/yamlr}
}
\seealso{
\code{
  	\link[yamlr]{YamlContext.ObjectReference.S3}
}
}

