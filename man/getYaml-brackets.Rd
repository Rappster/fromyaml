% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{getYaml-brackets}
\alias{getYaml-brackets}
\alias{getYaml-curlybracket-YamlContext.ObjectReference.S3-method}
\title{Get YAML Markup (curlybracket-YamlContext.ObjectReference.S3)}
\usage{
\S4method{getYaml}{`{`,YamlContext.ObjectReference.S3}(from, ctx = NULL,
  where = parent.frame(), strict = FALSE, ...)
}
\arguments{
\item{from}{\code{\link{{}}}.}

\item{ctx}{\code{\link{YamlContext.ObjectReference.S3}}.}

\item{where}{\code{\link{environment}}.
Environment in which to assign the function in the \code{src} field of
class \code{\link[yamlr]{ObjectReferenceYaml.S3}}. Only relevant
in case the YAML has been provided via comments instead of an
inline string as this involves some additional transformation steps.}

\item{strict}{\code{\link{logical}}.
\code{TRUE}: error if no YAML markup could be identified (which in turn
results in field \code{original} in class
\code{\link[yamlr]{ObjectReferencedYaml.S3}} being empty);
\code{FALSE}: no error if no YAML markup could be identified.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
\code{\link{character}}. Identified YAML markup.
}
\description{
See generic: \code{\link[yamlr]{getYaml}}
}
\examples{
\dontrun{

##------------------------------------------------------------------------------  
## As inline string //
##------------------------------------------------------------------------------

## With curly brackets //  
yaml <- getYaml(
  from = function() {
    "object-ref: {id: x_1, where: .GlobalEnv, as: ref_1}"
    ref_1 * 2
  },
  ctx = YamlContext.ObjectReference.S3()
)
yaml
yaml$original
yaml$index
yaml$src

## W/o curly brackets //
yaml <- getYaml(
  from = function()
    "object-ref: {id: x_1, where: .GlobalEnv, as: ref_1}",
  ctx = YamlContext.ObjectReference.S3()
)
yaml$original
yaml$original
yaml$index
yaml$src

## Expression //
yaml <- getYaml(
  from = captureExpression({
    "object-ref: {id: x_1, where: .GlobalEnv, as: ref_1}"
    ref_1 * 2
  }),
  ctx = YamlContext.ObjectReference.S3()
)
yaml
yaml$original
yaml$index
yaml$src

## Condition handling //
yaml <- getYaml(
  from = function (){
    "Invalid YAML markup"
    ref_1 * 2
  },
  ctx = YamlContext.ObjectReference.S3()
)
yaml
yaml$original
yaml$index
yaml$src

try(getYaml(
  from = function (){
    "Invalid YAML markup"
    ref_1 * 2
  },
  ctx = YamlContext.ObjectReference.S3(),
  strict = TRUE
))

##------------------------------------------------------------------------------  
## As comment //
##------------------------------------------------------------------------------

## With curly brackets //  
yaml <- getYaml(
  from = function() {
    ## object-ref: {id: x_1, where: .GlobalEnv, as: ref_1}
    ref_1 * 2
  },
  ctx = YamlContext.ObjectReference.S3()
)
yaml$original
yaml$index
yaml$src

## W/o curly brackets //
yaml <- getYaml(
  from = function()
    ## object-ref: {id: x_1, where: .GlobalEnv, as: ref_1}
    ref_1 * 2,
  ctx = YamlContext.ObjectReference.S3()
)
yaml$original
yaml$index
yaml$src

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/yamlr}
}
\seealso{
\code{
   \link[yamlr]{getYaml}
}
}

